% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rescaleContinuous.R
\name{rescaleContinuous}
\alias{rescaleContinuous}
\title{Re-scale continuous variables to [0,1] bound}
\usage{
rescaleContinuous(dat, L, U, select)
}
\arguments{
\item{dat}{dataset containing continuous variables to be rescaled}

\item{L}{a vector of theoretical lower values (e.g., 0) for the respective input variables. Must
be either a single value to applied to each variable, or a vector equal to the number
of elements being transformed}

\item{U}{a vector of theoretical upper values (e.g., 100) for the respective
input variables. Has the same input structure as \code{L}}

\item{select}{similar to \code{\link{subset}} to extract specific columns in \code{dat},
however the complete \code{dat} object will be returned with transformations applied
only to these variables. If omitted all variables will be selected for transformation}
}
\description{
Transforms select continuous variables to fall within [0,1] boundary. Requires
upper and lower inputs for each continuous variable input.
}
\examples{

# dataset with scores all from 0-30
dat <- as.data.frame(matrix(runif(5000, 0, 30), ncol=5))
head(dat)

# rescaled to 0-1 for all columns (default)
rescaled <- rescaleContinuous(dat, L = 0, U = 30)
head(rescaled)

# if U/L differ across variables provide suitable vectors
rescaled <- rescaleContinuous(dat,
                              L = rep(0, 5), U = rep(30, 5))
head(rescaled)

# mix of continuous and discrete, rescaling only the former
LSAT6 <- expand.table(LSAT6)
dat.mix <- data.frame(LSAT6, dat)
head(dat.mix)

rescaled <- rescaleContinuous(dat.mix, L = 0, U = 30,
                              select = V1:V5)
head(rescaled)

}
\references{
Chalmers, R., P. (2012). mirt: A Multidimensional Item Response Theory
Package for the R Environment. \emph{Journal of Statistical Software, 48}(6), 1-29.
\doi{10.18637/jss.v048.i06}
}
\seealso{
\code{\link{mirt}}
}
\author{
Phil Chalmers \email{rphilip.chalmers@gmail.com}
}
\keyword{rescaling}
